"0","knitr::opts_chunk$set(echo = TRUE)"
"0","library(class)"
"0","library(gmodels)"
"0","library(rlang)"
"0","library(caret)"
"0","library(extrafont)"
"0","library(leaflet)"
"0","library(ggplot2)"
"0","library(dplyr)"
"0","library(extrafont)"
"0","library(leaflet)"
"0","library(scales)"
"0","library(knitr)"
"0","library(tidyverse)"
"0","library(forcats)"
"0","library(wordcloud2)"
"0","library(plotly)"
"0","Sys.setenv(""plotly_username""=""jenniferb-c"")"
"0","Sys.setenv(""plotly_api_key""=""rHDyzJdezEPqEuJh4rv0"")"
"0","#### read in GMS data"
"0","setwd(""C:/Users/jenniferb/OneDrive - Sport England/GitHub/Small Grants"")"
"2","The working directory was changed to C:/Users/jenniferb/OneDrive - Sport England/GitHub/Small Grants inside a notebook chunk. The working directory will be reset when the chunk is finished running. Use the knitr root.dir option in the setup chunk to change the working directory for notebook chunks."
"0","sg_df <- read.csv('SG_all.csv', header = TRUE, na.strings = c("""",""N/A""))"
"0","topic_tbl <- read.csv('12Month_top.csv') %>%"
"0","  rename(""Topic"" = Topic.id, ""Terms"" = Concatenate.Term.)"
"0","text_df <- read.csv('12Month_Prog.csv', header = TRUE)"
"0","sentiment_df <- read.csv('Sentiment.csv', header = TRUE)%>%"
"0","  select(""Document"", ""Sentiment.Prediction"", ""all.Words"") %>%"
"0","  rename(""Sentiment"" = Sentiment.Prediction, `Number of Words` = ""all.Words"")"
"0","# colours for charts"
"0","se_colour<- c(""#E79AB5"", ""#B8345C"", ""#8CCDD6"", ""#43A8B6"", ""#00818F"", ""#C1DC9A"", ""#7ABB40"", ""#5D4086"")"
"0","# transformation for headline figs"
"0","sp_vec <- sg_df %>% count(Sport, sort = TRUE)"
"0","sp_per <- sp_vec[1,2] / sum(sp_vec$n) * 100"
"0","sp_per <- unlist(sp_per)"
"0","sp_org <- sg_df %>% count(ORGANISATION_NAME, sort = TRUE) "
"0","sp_org$Times_funded <- ifelse(sp_org$n > 1, ""More than once"", ""Once"")"
"0","sp_la <- sg_df%>% count(LOCAL_AUTHORITY, sort = TRUE)"
"2","Factor `LOCAL_AUTHORITY` contains implicit NA, consider using `forcats::fct_explicit_na`"
"0","sp_fo <- sg_df%>% count(Focus, sort = TRUE)"
"0","sp_la_imd <- sg_df[order(sg_df$IMD_RANK),]"
"0","sent_tab <- table(sentiment_df$Sentiment)"
"0","## for sport chart"
"0","sg_sport <- sg_df %>%"
"0","  select(AWARD, Sport) %>%"
"0","  group_by(Sport) %>%"
"0","  summarise(AWARD = sum(AWARD))"
"0","### create count"
"0","count_of_sp <- sg_sport %>%"
"0","count_of_sp <- sum(count_of_sp$n /2)"
"2","Error in count_of_sp$n : $ operator is invalid for atomic vectors
"
