map.clean <- map.clean[, !duplicated(colnames(map.clean))] # remove dupe cols
HexPols <- HexPoints2SpatialPolygons(HexPts)
plot(HexPols)
setwd("C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC")
file.shp <- "C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC/Local_Authority_Districts_April_2019_Boundaries_UK_BUC.shp"
install.packages('hexmapr')
install.packages('gridExtra')
install.packages("gridExtra")
install.packages('gridExtra')
library("broom") # to put shapefile into a dataframe format
install.packages('broom')
install.packages("broom")
file.shp <- "C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC/Local_Authority_Districts_April_2019_Boundaries_UK_BUC.shp"
LAD_shp <- read_polygons(file.shp)
df <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/Power BI/Active Lives Survey/Gender_May1819_LA_CC_Regv2.csv')
df <- df %>%
select('lad19cd', 'Male.Active')
library(dplyr)
df <- df %>%
select('lad19cd', 'Male.Active')
LAD_shp_data <- sp::merge(LAD_shp,
df,
by.x="lad19cd",
by.y="lad19cd",
duplicateGeoms=T,
all.x=F)
LAD_shp <- read_polygons(file.shp)
install_github("sassalley/hexmapr") # install hexmapr if not installed already
?read_polygon
??read_polygon
library(geogrid)
LAD_shp <- read_polygons(file.shp)
plot(LAD_shp)
df <- df %>%
select('lad19cd', 'Male.Active')
LAD_shp_data <- sp::merge(LAD_shp,
df,
by.x="lad19cd",
by.y="lad19cd",
duplicateGeoms=T,
all.x=F)
clean <- function(shape){
shape@data$id = rownames(shape@data)
shape.points = tidy(shape, region="id")
shape.df = inner_join(shape.points, shape@data, by="id")
}
# Apply function to shapefile
LAD_shp_data_tidy <- clean(LAD_shp_data)
library("tidyverse")#; theme_set(theme_bw())
# Apply function to shapefile
LAD_shp_data_tidy <- clean(LAD_shp_data)
library("broom") # to put shapefile into a dataframe format
library("devtools") # to enable installing from github
install.packages('devtools')
# Apply function to shapefile
LAD_shp_data_tidy <- clean(LAD_shp_data)
?tidy
??tidy
library("broom") # to put shapefile into a dataframe format
clean <- function(shape){
shape@data$id = rownames(shape@data)
shape.points = tidy(shape, region="id")
shape.df = inner_join(shape.points, shape@data, by="id")
}
# Apply function to shapefile
LAD_shp_data_tidy <- clean(LAD_shp_data)
?inner_join
library(dplyr)
clean <- function(shape){
shape@data$id = rownames(shape@data)
shape.points = tidy(shape, region="id")
shape.df = inner_join(shape.points, shape@data, by="id")
}
# Apply function to shapefile
LAD_shp_data_tidy <- clean(LAD_shp_data)
# plot the map
(plot_1 <- ggplot(LAD_shp_data_tidy, aes(long.x,
lat.x,
fill=Value,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma") +
coord_equal() + theme_void())
library("tidyverse")#; theme_set(theme_bw())
# plot the map
(plot_1 <- ggplot(LAD_shp_data_tidy, aes(long.x,
lat.x,
fill=Value,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma") +
coord_equal() + theme_void())
library("viridis") # fancy colour palettes
# plot the map
(plot_1 <- ggplot(LAD_shp_data_tidy, aes(long.x,
lat.x,
fill=Value,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma") +
coord_equal() + theme_void())
# plot the map
(plot_1 <- ggplot(LAD_shp_data_tidy, aes(long.x,
lat.x,
fill=Male.Active,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma") +
coord_equal() + theme_void())
par(mfrow=c(3,3), mar = c(0,0,2,0))
for (i in 1:9){
new_cells <-  calculate_cell_size(LAD_shp_data, LAD_shp_details,0.03, 'hexagonal', i)
plot(new_cells[[2]], main = paste("Seed",i, sep=" "))
}
#install_github("sassalley/hexmapr") # install hexmapr if not installed already
library("hexmap")
#install_github("sassalley/hexmapr") # install hexmapr if not installed already
library(hexbin)
LAD_shp_details <- get_shape_details(LAD_shp_data)
?get_shape_details
??get_shape_details
library(geogrid)
LAD_shp_details <- get_shape_details(LAD_shp_data)
LAD_shp_details <- calculate_grid(LAD_shp_data)
par(mfrow=c(3,3), mar = c(0,0,2,0))
for (i in 1:9){
new_cells <-  calculate_cell_size(LAD_shp_data, LAD_shp_details,0.03, 'hexagonal', i)
plot(new_cells[[2]], main = paste("Seed",i, sep=" "))
}
new_cells <-  calculate_grid(LAD_shp_data, LAD_shp_details,0.03, 'hexagonal', i)
new_cells <-  calculate_grid(LAD_shp_data, LAD_shp_details,0.3, 'hexagonal', i)
new_cells_hex <-  calculate_cell_size(LAD_shp_data, LAD_shp_details,0.03, 'hexagonal', 3)
new_cells_hex <-  calculate_grid(LAD_shp_data, LAD_shp_details,0.03, 'hexagonal', 3)
?calculate_grid
new_cells_hex <-  calculate_grid(shape = LAD_shp_data, LAD_shp_details,0.03, 'hexagonal')
new_cells_hex <-  calculate_grid(shape = LAD_shp_data, LAD_shp_details, 'hexagonal')
new_cells_hex <-  calculate_grid(shape = LAD_shp_data, learning_rate = 0.03, grid_type = c('hexagonal', "regular", seed = NULL)
resulthex <- assign_polygons(LAD_shp_data,new_cells_hex)
resulthex <- assign_polygons(LAD_shp_data,new_cells_hex)
new_cells_hex <-  calculate_grid(shape = LAD_shp_data, learning_rate = 0.03, grid_type = c('hexagonal', "regular", seed = NULL)
new_cells_hex <-  calculate_grid(shape = LAD_shp_data, learning_rate = 0.03, grid_type = c('hexagonal', "regular"), seed = NULL)
new_cells_hex <-  calculate_grid(shape = LAD_shp_data, learning_rate = 0.03, grid_type = c('hexagonal', "regular"), seed = NULL)
resulthex <- assign_polygons(LAD_shp_data,new_cells_hex)
resulthex <- assign_polygons(LAD_shp_data,new_cells_hex)
library("tidyverse")#; theme_set(theme_bw())
library("broom") # to put shapefile into a dataframe format
library("devtools") # to enable installing from github
install.packages('devtools')
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library("tidyverse")#; theme_set(theme_bw())
library("broom") # to put shapefile into a dataframe format
library("devtools") # to enable installing from github
library("fingertipsR") # to access PHE fingertips data
#install_github("sassalley/hexmapr") # install hexmapr if not installed already
library(hexbin)
library("viridis") # fancy colour palettes
library("gridExtra") # to arrange multiple plots
library(geogrid)
file.shp <- "C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC/Local_Authority_Districts_April_2019_Boundaries_UK_BUC.shp"
LAD_shp <- read_polygons(file.shp)
LAD_shp <- sf::st_read(file.shp)
View(LAD_shp)
plot(LAD_shp)
df <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/Power BI/Active Lives Survey/Gender_May1819_LA_CC_Regv2.csv')
df <- df %>%
select('lad19cd', 'Male.Active')
LAD_shp_data <- sp::merge(LAD_shp,
df,
by.x="lad19cd",
by.y="lad19cd",
duplicateGeoms=T,
all.x=F)
clean <- function(shape){
shape@data$id = rownames(shape@data)
shape.points = tidy(shape, region="id")
shape.df = inner_join(shape.points, shape@data, by="id")
}
# Apply function to shapefile
LAD_shp_data_tidy <- clean(LAD_shp_data)
LAD_shp <- read_polygons(file.shp)
plot(LAD_shp)
df <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/Power BI/Active Lives Survey/Gender_May1819_LA_CC_Regv2.csv')
df <- df %>%
select('lad19cd', 'Male.Active')
LAD_shp_data <- sp::merge(LAD_shp,
df,
by.x="lad19cd",
by.y="lad19cd",
duplicateGeoms=T,
all.x=F)
clean <- function(shape){
shape@data$id = rownames(shape@data)
shape.points = tidy(shape, region="id")
shape.df = inner_join(shape.points, shape@data, by="id")
}
# Apply function to shapefile
LAD_shp_data_tidy <- clean(LAD_shp_data)
LAD_shp_data_tidy - LAD_shp_data_tidy[grep("E", map.clean$lad19cd),]
LAD_shp_data_tidy - LAD_shp_data_tidy[grep("E",  LAD_shp_data_tidy$lad19cd),]
head(LAD_shp_data_tidy$lad19cd)
LAD_shp_data_tidy <- LAD_shp_data_tidy[grep("E", LAD_shp_data_tidy$lad19cd),]
plot(LAD_shp_data_tidy)
# plot the map
(plot_1 <- ggplot(LAD_shp_data_tidy, aes(long.x,
lat.x,
fill=Male.Active,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma") +
coord_equal() + theme_void())
LAD_shp_details <- calculate_grid(LAD_shp_data)
# test
par(mfrow=c(3,3), mar = c(0,0,2,0))
for (i in 1:9){
new_cells <-  calculate_grid(shape = LAD_shp_data, learning_rate = 0.03, grid_type = c('hexagonal', "regular"), seed = i)
plot(new_cells[[2]], main = paste("Seed",i, sep=" "))
}
new_cells_hex <-  calculate_grid(shape = LAD_shp_data, learning_rate = 0.03, grid_type = c('hexagonal', "regular"), seed = 1)
resulthex <- assign_polygons(LAD_shp_data,new_cells_hex)
# generate plot
plot_2 <- ggplot(resulthex, aes(long.x,
lat.x,
fill=Value,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma") +
coord_equal() + theme_void()
# arrange plot with comparison to the original
grid.arrange(plot_1, plot_2, nrow=1, ncol=2)
# generate plot
plot_2 <- ggplot(resulthex, aes(long,
lat,
fill=Male.Active,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma") +
coord_equal() + theme_void()
# arrange plot with comparison to the original
grid.arrange(plot_1, plot_2, nrow=1, ncol=2)
resulthex <- clean(resulthex)
# generate plot
plot_2 <- ggplot(resulthex, aes(long.x,
lat.x,
fill=Male.Active,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma") +
coord_equal() + theme_void()
# arrange plot with comparison to the original
grid.arrange(plot_1, plot_2, nrow=1, ncol=2)
# generate plot
plot_2 <- ggplot(resulthex, aes(long.x,
lat.x,
fill=Male.Active,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma", name = "Male Active") +
coord_equal() + theme_void() +
theme(element_text(family = "Poppins"))
# generate plot
plot_2 <- ggplot(resulthex, aes(long.x,
lat.x,
fill=Male.Active,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma", name = "Male Active") +
coord_equal() + theme_void() +
theme(text = element_text(family = "Poppins"))
# arrange plot with comparison to the original
grid.arrange(plot_1, plot_2, nrow=1, ncol=2)
write.csv('HexMap_England.csv')
setwd("C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data")
colnames(resulthex)
resulthex.save <- resulthex[,-22]
write.csv(resulthex.save, 'HexMap_England.csv')
write.csv(resulthex, 'HexMap_England_Active.Males.csv')
# generate plot
plot_2 <- ggplot(resulthex, aes(long.x,
lat.x,
fill=Male.Active,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma", name = "Male Active", labels = percent(0.1*0:9)) +
coord_equal() + theme_void() +
theme(text = element_text(family = "Poppins"))
library(scales)
# generate plot
plot_2 <- ggplot(resulthex, aes(long.x,
lat.x,
fill=Male.Active,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma", name = "Male Active", labels = percent(0.1*0:9)) +
coord_equal() + theme_void() +
theme(text = element_text(family = "Poppins"))
# arrange plot with comparison to the original
grid.arrange(plot_1, plot_2, nrow=1, ncol=2)
# generate plot
plot_2 <- ggplot(resulthex, aes(long.x,
lat.x,
fill=Male.Active,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma", name = "Male Active", labels = percent()) +
coord_equal() + theme_void() +
theme(text = element_text(family = "Poppins"))
# generate plot
plot_2 <- ggplot(resulthex, aes(long.x,
lat.x,
fill=Male.Active,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma", name = "Male Active", breaks = 0.1*0:9, labels = percent(0.1*0:9)) +
coord_equal() + theme_void() +
theme(text = element_text(family = "Poppins"))
# arrange plot with comparison to the original
grid.arrange(plot_1, plot_2, nrow=1, ncol=2)
knitr::opts_chunk$set(echo = TRUE)
# load packages
library(extrafont)
library(viridis)
library(viridisLite)
library(scales)
### read in data to append
resulthex <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/HexMap_England_Active.Males.csv')
knitr::opts_chunk$set(echo = TRUE)
### read in data to append
resulthex <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/HexMap_England_Active.Males.csv')
# load packages
library(ggplot2)
library(extrafont)
library(viridisLite)
library(scales)
ggplot(resulthex, aes(long.x,
lat.x,
fill=Male.Active,
group=group)) +
geom_polygon(col="white") +
scale_fill_viridis(option="magma", name = "Male Active", breaks = 0.1*0:9, labels = percent(0.1*0:9)) +
coord_equal() + theme_void() +
theme(text = element_text(family = "Poppins"))
install.packages('rlang')
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
### read in data to append
resulthex <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/HexMap_England_Active.Males.csv')
kable(resulthex[1:5,]) %>%
kable_styling(bootstrap_options = "bordered",
full_width = FALSE)
knitr::opts_chunk$set(include = FALSE)
library(kableExtra)
### read in data to append
resulthex <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/HexMap_England_Active.Males.csv')
file.shp <- "C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC/Local_Authority_Districts_April_2019_Boundaries_UK_BUC.shp"
library("tidyverse")# for ggplot
library("broom") # to put shapefile into a dataframe format
library("devtools") # to enable installing from github
library("fingertipsR") # to access PHE fingertips data
library("hexbin")
library("viridis") # fancy colour palettes
library("gridExtra") # to arrange multiple plots
library("geogrid")
library("extrafont") # for bespoke font
library("scales") # for ggplot
knitr::opts_chunk$set(include = FALSE)
library(kableExtra)
### read in data to append
resulthex <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/HexMap_England_Active.Males.csv')
file.shp <- "C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC/Local_Authority_Districts_April_2019_Boundaries_UK_BUC.shp"
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)# for ggplot
library(broom) # to put shapefile into a dataframe format
library(kableExtra)
#data
file.shp <- "C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC/Local_Authority_Districts_April_2019_Boundaries_UK_BUC.shp"
df <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/Power BI/Active Lives Survey/Gender_May1819_LA_CC_Regv2.csv')
library(tidyverse)# for ggplot
library(broom) # to put shapefile into a dataframe format
LAD_shp <- read_polygons(file.shp) #file.shp is an LA boundary shapefile from ONS
library(tidyverse)# for ggplot
library(broom) # to put shapefile into a dataframe format
library(geogrid) #reading and cleaning
LAD_shp <- read_polygons(file.shp) #file.shp is an LA boundary shapefile from ONS
plot(LAD_shp)
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
#data
file.shp <- "C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC/Local_Authority_Districts_April_2019_Boundaries_UK_BUC.shp"
df <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/Power BI/Active Lives Survey/Gender_May1819_LA_CC_Regv2.csv')
library(tidyverse)# for ggplot
library(broom) # to put shapefile into a dataframe format
library(geogrid) #reading and cleaning
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(broom)
library(geogrid)
library(tidyverse) # Our favourite grammar of graphics to create the map
library(extrafont)# for Sport England house font
library(scales) # for percentage function
library(viridis) # for colours
file.shp <- "C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC/Local_Authority_Districts_April_2019_Boundaries_UK_BUC.shp"
LAD_shp <- read_polygons(file.shp) #file.shp is an LA boundary shapefile from ONS
df <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/Power BI/Active Lives Survey/Gender_May1819_LA_CC_Regv2.csv') %>%
select('lad19cd', 'Male.Active')
LAD_shp_data <- sp::merge(LAD_shp, #merge shape and data
df,
by.x="lad19cd",
by.y="lad19cd",
duplicateGeoms=T,
all.x=F)
clean <- function(shape){ # function
shape@data$id = rownames(shape@data)
shape.points = tidy(shape, region="id")
shape.df = inner_join(shape.points, shape@data, by="id")
}
# Apply function to shapefile
LAD_shp_data_tidy <- clean(LAD_shp_data)
# here we can include only England by specifying only LAs with an "E" in the code are retained.
LAD_shp_data_tidy <- LAD_shp_data_tidy[grep("E", LAD_shp_data_tidy$lad19cd),]
library(tidyverse) # multiple packages including ggplot
library(extrafont)# for Sport England house font
library(scales) # for percentage function
library(viridis) # for colours
kable(LAD_shp_data_tidy[1,]) %>% # show first line of joined data
kable_styling(bootstrap_options = "bordered",
position = "left", font_size = 8)
knitr::opts_chunk$set(echo = TRUE)
# load packages
library(tidyverse)
library(geogrid)
library(scales)
library(plyr)
library(dplyr)
library(tidyr)
library(extrafont)
library(rgdal)
library(viridis)
file.shp <- "C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC/Local_Authority_Districts_April_2019_Boundaries_UK_BUC.shp"
LAD_shp <- read_polygons(file.shp) #file.shp is an LA boundary shapefile from ONS
df <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/Power BI/Active Lives Survey/Gender_May1819_LA_CC_Regv2.csv') %>%
select('lad19cd', 'Male.Active')
LAD_shp_data <- sp::merge(LAD_shp, #merge shape and data
df,
by.x="lad19cd",
by.y="lad19cd",
duplicateGeoms=T,
all.x=F)
clean <- function(shape){ # function
shape@data$id = rownames(shape@data)
shape.points = tidy(shape, region="id")
shape.df = inner_join(shape.points, shape@data, by="id")
}
# Apply function to shapefile
LAD_shp_data_tidy <- clean(LAD_shp_data)
# here we can include only England by specifying only LAs with an "E" in the code are retained.
LAD_shp_data_tidy <- LAD_shp_data_tidy[grep("E", LAD_shp_data_tidy$lad19cd),]
knitr::opts_chunk$set(echo = TRUE)
# load packages
library(ggplot2)
library(scales)
library(plyr)
library(dplyr)
library(tidyr)
library(extrafont)
library(rgdal)
library(viridis)
### read in data to append
df <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/Power BI/Active Lives Survey/Gender_May1819_LA_CC_Regv2.csv') %>%
select('lad19cd', 'Male.Active')
range(df$Male.Active)
#import shapefile
setwd("C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC")
knitr::opts_chunk$set(echo = TRUE)
# load packages
library(tidyverse)
library(geogrid)
library(scales)
library(plyr)
library(dplyr)
library(tidyr)
library(extrafont)
library(viridis)
library(broom)
library(hexbin)
file.shp <- "C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC/Local_Authority_Districts_April_2019_Boundaries_UK_BUC.shp"
LAD_shp <- read_polygons(file.shp) #file.shp is an LA boundary shapefile from ONS
df <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/Power BI/Active Lives Survey/Gender_May1819_LA_CC_Regv2.csv') %>%
select('lad19cd', 'Male.Active')
LAD_shp_data <- sp::merge(LAD_shp, #merge shape and data
df,
by.x="lad19cd",
by.y="lad19cd",
duplicateGeoms=T,
all.x=F)
clean <- function(shape){ # function
shape@data$id = rownames(shape@data)
shape.points = tidy(shape, region="id")
shape.df = inner_join(shape.points, shape@data, by="id")
}
# Apply function to shapefile
LAD_shp_data_tidy <- clean(LAD_shp_data)
# here we can include only England by specifying only LAs with an "E" in the code are retained.
LAD_shp_data_tidy <- LAD_shp_data_tidy[grep("E", LAD_shp_data_tidy$lad19cd),]
# load package
library(cartogram)
## create cartogram
test_cart <- cartogram_cont(LAD_shp_data@data, "Male.Active") #LAD_shp_data is a spatial dataframe joined with Active Lives data prior to it being converted to a dataframe
library(r2d3)
