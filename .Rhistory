library(scales)
library(plyr)
library(dplyr)
library(tidyr)
library(extrafont)
library(rgdal)
library(viridis)
file.shp <- "C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC/Local_Authority_Districts_April_2019_Boundaries_UK_BUC.shp"
LAD_shp <- read_polygons(file.shp) #file.shp is an LA boundary shapefile from ONS
df <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/Power BI/Active Lives Survey/Gender_May1819_LA_CC_Regv2.csv') %>%
select('lad19cd', 'Male.Active')
LAD_shp_data <- sp::merge(LAD_shp, #merge shape and data
df,
by.x="lad19cd",
by.y="lad19cd",
duplicateGeoms=T,
all.x=F)
clean <- function(shape){ # function
shape@data$id = rownames(shape@data)
shape.points = tidy(shape, region="id")
shape.df = inner_join(shape.points, shape@data, by="id")
}
# Apply function to shapefile
LAD_shp_data_tidy <- clean(LAD_shp_data)
# here we can include only England by specifying only LAs with an "E" in the code are retained.
LAD_shp_data_tidy <- LAD_shp_data_tidy[grep("E", LAD_shp_data_tidy$lad19cd),]
knitr::opts_chunk$set(echo = TRUE)
# load packages
library(ggplot2)
library(scales)
library(plyr)
library(dplyr)
library(tidyr)
library(extrafont)
library(rgdal)
library(viridis)
### read in data to append
df <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/Power BI/Active Lives Survey/Gender_May1819_LA_CC_Regv2.csv') %>%
select('lad19cd', 'Male.Active')
range(df$Male.Active)
#import shapefile
setwd("C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC")
knitr::opts_chunk$set(echo = TRUE)
# load packages
library(tidyverse)
library(geogrid)
library(scales)
library(plyr)
library(dplyr)
library(tidyr)
library(extrafont)
library(viridis)
library(broom)
library(hexbin)
file.shp <- "C:/Users/jenniferb/OneDrive - Sport England/GitHub/Geographical Data/LAD/Local_Authority_Districts_April_2019_Boundaries_UK_BUC/Local_Authority_Districts_April_2019_Boundaries_UK_BUC.shp"
LAD_shp <- read_polygons(file.shp) #file.shp is an LA boundary shapefile from ONS
df <- read.csv('C:/Users/jenniferb/OneDrive - Sport England/Power BI/Active Lives Survey/Gender_May1819_LA_CC_Regv2.csv') %>%
select('lad19cd', 'Male.Active')
LAD_shp_data <- sp::merge(LAD_shp, #merge shape and data
df,
by.x="lad19cd",
by.y="lad19cd",
duplicateGeoms=T,
all.x=F)
clean <- function(shape){ # function
shape@data$id = rownames(shape@data)
shape.points = tidy(shape, region="id")
shape.df = inner_join(shape.points, shape@data, by="id")
}
# Apply function to shapefile
LAD_shp_data_tidy <- clean(LAD_shp_data)
# here we can include only England by specifying only LAs with an "E" in the code are retained.
LAD_shp_data_tidy <- LAD_shp_data_tidy[grep("E", LAD_shp_data_tidy$lad19cd),]
# load package
library(cartogram)
## create cartogram
test_cart <- cartogram_cont(LAD_shp_data@data, "Male.Active") #LAD_shp_data is a spatial dataframe joined with Active Lives data prior to it being converted to a dataframe
library(r2d3)
knitr::opts_chunk$set(echo = TRUE)
library(class)
library(gmodels)
library(rlang)
library(caret)
library(extrafont)
library(reshape2)
library(leaflet)
library(ggplot2)
library(dplyr)
library(extrafont)
library(leaflet)
library(scales)
library(knitr)
library(tidyverse)
library(forcats)
library(wordcloud2)
library(DT)
library(readxl)
library(kableExtra)
#### read in GMS data
setwd("C:/Users/jenniferb/OneDrive - Sport England/GitHub/Small Grants")
sg_df <- read.csv('SG_all.csv', header = TRUE, na.strings = c("","N/A"))
topic_tbl <- read.csv('12Month_top.csv') %>%
rename("Topic" = Topic.id, "Terms" = Concatenate.Term.)
text_df <- read.csv('12Month_Prog.csv', header = TRUE)
gov <- read.csv('Gov.csv', header = TRUE, na.strings = c("","N/A"))
sentiment_df <- read.csv('Sentiment.csv', header = TRUE)%>%
select("Document", "Sentiment.Prediction", "all.Words") %>%
rename("Sentiment" = Sentiment.Prediction, `Number of Words` = "all.Words")
#### M&E data
me_df <- read_xlsx('MandE.xlsx', na = "NA")
##mean data
me_df_mean  <- me_df %>%
select( "YEAR 1 PARTICIPANTS TARGET", "12 MONTH PARTICIPANTS") %>%
mutate(`NUMBER OVER/UNDER` = `12 MONTH PARTICIPANTS` - `YEAR 1 PARTICIPANTS TARGET`)
## for women
me_df_women <- read_xlsx('MandE.xlsx', na = "NA")%>%
select("MALE TARGET NUMBER", "MALE TARGET PERCENTAGE", "FEMALE TARGET NUMBER", "FEMALE TARGET PERCENTAGE", "12 MONTH MALE NUMBER", "12 MONTH FEMALE NUMBER", "12 MONTH MALE PERCENTAGE", "12 MONTH FEMALE PERCENTAGE",  "prediction" )
me_box_g <- me_df %>%
select("12 MONTH FEMALE NUMBER", "12 MONTH MALE NUMBER", "AWARD", "prediction") %>%
mutate("Gender_Focus" = ifelse(test = `12 MONTH MALE NUMBER` >= `12 MONTH FEMALE NUMBER`, yes = "Female", no = "Male"))
# colours for charts
se_colour <- c( "#e41b4a", "#0072d6", "#a4569c", "#00a881", "#ff6105") # custom colours to use in the chart
# transformation for headline figs
sp_vec <- sg_df %>% count(Sport, sort = TRUE)
sp_per <- sp_vec[1,2] / sum(sp_vec$n) * 100
sp_per <- unlist(sp_per)
sp_org <- sg_df %>% count(ORGANISATION_NAME, sort = TRUE)
sp_org$Times_funded <- ifelse(sp_org$n > 1, "More than once", "Once")
sp_la <- sg_df%>% count(LOCAL_AUTHORITY, sort = TRUE)
sp_fo <- sg_df%>% count(Focus, sort = TRUE)
sp_la_imd <- sg_df[order(sg_df$IMD_RANK),]
sent_tab <- table(sentiment_df$Sentiment)
gov_ord <- gov[order(gov$AWARD, decreasing = TRUE),]
## for sport chart
sg_sport <- sg_df %>%
select(AWARD, Sport) %>%
group_by(Sport) %>%
summarise(AWARD = sum(AWARD))
### create count
count_of_sp <- sg_sport %>%
count(Sport)
count_of_sp <- sum(count_of_sp$n /2)
## for org chart
sg_org <- sg_df %>%
select(AWARD, Org_Class) %>%
group_by(Org_Class) %>%
summarise(AWARD = sum(AWARD))
## for M&E
tab_me <- table(me_df$prediction)
me_tab <- me_df %>%
select("GMS_URN", "Sport", "Org_Class", "AWARD", "PARTICIPANTS BASELINE", "YEAR 1 PARTICIPANTS TARGET", "12 MONTH PARTICIPANTS", "prediction") %>%
mutate(`Number of Participants (over / under target)` = `12 MONTH PARTICIPANTS` - `YEAR 1 PARTICIPANTS TARGET`)%>%
mutate("Percentage (over / under target" = `Number of Participants (over / under target)` / `YEAR 1 PARTICIPANTS TARGET`)
DT::datatable(me_tab, colnames = c('Row', 'URN', 'Sport', 'Organisation Type', 'Award Amount', 'Baseline', 'Year 1 Target', 'Year 1 Participants', 'Outcome', 'Number: over/under target'),  filter = 'top',
options = list(pageLength = 5,
lengthMenu = c(5, 10, 15, 20)))%>%
formatCurrency(4, 'Â£') %>%
formatRound(c(5:8, 10),0) %>%
formatStyle(columns = "GMS_URN", font = "Poppins", color = "white" , backgroundColor = "#e41b4a" )
knitr::opts_chunk$set(echo = TRUE)
library(extrafont)
library(reshape2)
library(ggplot2)
library(dplyr)
library(extrafont)
library(leaflet)
library(scales)
library(knitr)
library(tidyverse)
library(DT)
library(readxl)
library(kableExtra)
#### read in GMS data
setwd("C:/Users/jenniferb/OneDrive - Sport England/GitHub/Small Grants")
sg_df <- read.csv('SG_all.csv', header = TRUE, na.strings = c("","N/A"))
topic_tbl <- read.csv('12Month_top.csv') %>%
rename("Topic" = Topic.id, "Terms" = Concatenate.Term.)
text_df <- read.csv('12Month_Prog.csv', header = TRUE)
gov <- read.csv('Gov.csv', header = TRUE, na.strings = c("","N/A"))
sentiment_df <- read.csv('Sentiment.csv', header = TRUE)%>%
select("Document", "Sentiment.Prediction", "all.Words") %>%
rename("Sentiment" = Sentiment.Prediction, `Number of Words` = "all.Words")
#### M&E data
me_df <- read_xlsx('MandE.xlsx', na = "NA")
##mean data
me_df_mean  <- me_df %>%
select( "YEAR 1 PARTICIPANTS TARGET", "12 MONTH PARTICIPANTS") %>%
mutate(`NUMBER OVER/UNDER` = `12 MONTH PARTICIPANTS` - `YEAR 1 PARTICIPANTS TARGET`)
## for women
me_df_women <- read_xlsx('MandE.xlsx', na = "NA")%>%
select("MALE TARGET NUMBER", "MALE TARGET PERCENTAGE", "FEMALE TARGET NUMBER", "FEMALE TARGET PERCENTAGE", "12 MONTH MALE NUMBER", "12 MONTH FEMALE NUMBER", "12 MONTH MALE PERCENTAGE", "12 MONTH FEMALE PERCENTAGE",  "prediction" )
me_box_g <- me_df %>%
select("12 MONTH FEMALE NUMBER", "12 MONTH MALE NUMBER", "AWARD", "prediction") %>%
mutate("Gender_Focus" = ifelse(test = `12 MONTH MALE NUMBER` >= `12 MONTH FEMALE NUMBER`, yes = "Female", no = "Male"))
# colours for charts
se_colour <- c( "#e41b4a", "#0072d6", "#a4569c", "#00a881", "#ff6105") # custom colours to use in the chart
# transformation for headline figs
sp_vec <- sg_df %>% count(Sport, sort = TRUE)
sp_per <- sp_vec[1,2] / sum(sp_vec$n) * 100
sp_per <- unlist(sp_per)
sp_org <- sg_df %>% count(ORGANISATION_NAME, sort = TRUE)
sp_org$Times_funded <- ifelse(sp_org$n > 1, "More than once", "Once")
sp_la <- sg_df%>% count(LOCAL_AUTHORITY, sort = TRUE)
sp_fo <- sg_df%>% count(Focus, sort = TRUE)
sp_la_imd <- sg_df[order(sg_df$IMD_RANK),]
sent_tab <- table(sentiment_df$Sentiment)
gov_ord <- gov[order(gov$AWARD, decreasing = TRUE),]
## for sport chart
sg_sport <- sg_df %>%
select(AWARD, Sport) %>%
group_by(Sport) %>%
summarise(AWARD = sum(AWARD))
### create count
count_of_sp <- sg_sport %>%
count(Sport)
count_of_sp <- sum(count_of_sp$n /2)
## for org chart
sg_org <- sg_df %>%
select(AWARD, Org_Class) %>%
group_by(Org_Class) %>%
summarise(AWARD = sum(AWARD))
## for M&E
tab_me <- table(me_df$prediction)
knitr::opts_chunk$set(echo = TRUE)
library(extrafont)
library(reshape2)
library(ggplot2)
library(dplyr)
library(extrafont)
library(leaflet)
library(scales)
library(knitr)
library(tidyverse)
library(DT)
library(readxl)
library(kableExtra)
#### read in GMS data
setwd("C:/Users/jenniferb/OneDrive - Sport England/GitHub/Small Grants")
sg_df <- read.csv('SG_all.csv', header = TRUE, na.strings = c("","N/A"))
topic_tbl <- read.csv('12Month_top.csv') %>%
rename("Topic" = Topic.id, "Terms" = Concatenate.Term.)
text_df <- read.csv('12Month_Prog.csv', header = TRUE)
gov <- read.csv('Gov.csv', header = TRUE, na.strings = c("","N/A"))
sentiment_df <- read.csv('Sentiment.csv', header = TRUE)%>%
select("Document", "Sentiment.Prediction", "all.Words") %>%
rename("Sentiment" = Sentiment.Prediction, `Number of Words` = "all.Words")
#### M&E data
me_df <- read_xlsx('MandE.xlsx', na = "NA")
##mean data
me_df_mean  <- me_df %>%
select( "YEAR 1 PARTICIPANTS TARGET", "12 MONTH PARTICIPANTS") %>%
mutate(`NUMBER OVER/UNDER` = `12 MONTH PARTICIPANTS` - `YEAR 1 PARTICIPANTS TARGET`)
## for women
me_df_women <- read_xlsx('MandE.xlsx', na = "NA")%>%
select("MALE TARGET NUMBER", "MALE TARGET PERCENTAGE", "FEMALE TARGET NUMBER", "FEMALE TARGET PERCENTAGE", "12 MONTH MALE NUMBER", "12 MONTH FEMALE NUMBER", "12 MONTH MALE PERCENTAGE", "12 MONTH FEMALE PERCENTAGE",  "prediction" )
me_box_g <- me_df %>%
select("12 MONTH FEMALE NUMBER", "12 MONTH MALE NUMBER", "AWARD", "prediction") %>%
mutate("Gender_Focus" = ifelse(test = `12 MONTH MALE NUMBER` >= `12 MONTH FEMALE NUMBER`, yes = "Female", no = "Male"))
# colours for charts
se_colour <- c( "#e41b4a", "#0072d6", "#a4569c", "#00a881", "#ff6105") # custom colours to use in the chart
# transformation for headline figs
sp_vec <- sg_df %>% count(Sport, sort = TRUE)
sp_per <- sp_vec[1,2] / sum(sp_vec$n) * 100
sp_per <- unlist(sp_per)
sp_org <- sg_df %>% count(ORGANISATION_NAME, sort = TRUE)
sp_org$Times_funded <- ifelse(sp_org$n > 1, "More than once", "Once")
sp_la <- sg_df%>% count(LOCAL_AUTHORITY, sort = TRUE)
sp_fo <- sg_df%>% count(Focus, sort = TRUE)
sp_la_imd <- sg_df[order(sg_df$IMD_RANK),]
sent_tab <- table(sentiment_df$Sentiment)
gov_ord <- gov[order(gov$AWARD, decreasing = TRUE),]
## for sport chart
sg_sport <- sg_df %>%
select(AWARD, Sport) %>%
group_by(Sport) %>%
summarise(AWARD = sum(AWARD))
### create count
count_of_sp <- sg_sport %>%
count(Sport)
count_of_sp <- sum(count_of_sp$n /2)
## for org chart
sg_org <- sg_df %>%
select(AWARD, Org_Class) %>%
group_by(Org_Class) %>%
summarise(AWARD = sum(AWARD))
## for M&E
tab_me <- table(me_df$prediction)
table(gov$Govt_Outcome)
prop.table(gov$Govt_Outcome)
gov.1 <- gov
gov.1$Govt_Outcome <- as.numeric(gov.1$Govt_Outcome)
prop.table(gov.1$Govt_Outcome)
prop.table(gov$AWARD)
prop.table(gov$Govt_Outcome, gov$AWARD)
summary(gov$AWARD)
summary(gov$Govt_Outcome)
gov.1 <- summary(gov$Govt_Outcome)
prop.table(gov.1)
gov.1 <- summary(gov$Govt_Outcome)
prop.table(gov.1)%>%
kable()%>%
kable_styling(bootstrap_options = "bordered",
full_width = FALSE)
gov.1 <- prop.table(gov.1)
gov.1
paste0(scales::percent(AWARD, suffix = "%")))
paste0(scales::percent(AWARD, suffix = "%"))
paste0(scales::percent(gov.1, suffix = "%"))
gov.1 <- summary(gov$Govt_Outcome)
gov.1 <- prop.table(gov.1)
gov.1 <- prop.table(gov.1)%>%
paste0(scales::percent( suffix = "%"))
gov.1 <- prop.table(gov.1)%>%
paste0(scales::percent(gov.1, suffix = "%"))
gov.1
gov.1 <- summary(gov$Govt_Outcome)
gov.1 <- prop.table(gov.1)
gov.1
gov.1 <- as.data.frame(gov.1)
gov.1
paste0(scales::percent(gov.1, suffix = "%"))
gov.1 %>%
paste0(scales::percent(gov.1, suffix = "%"))
gov.1
gov.1$gov.1 <- paste0(scales::percent(gov.1, suffix = "%"))
gov.1$gov.1 <- paste0(scales::percent(gov.1$gov.1, suffix = "%"))
gov.1
gov.1$gov.1 <- paste0(scales::percent(gov.1$gov.1, suffix = "%")) %>%
rename(gov.1 = "Proportion")
gov.1 <- summary(gov$Govt_Outcome)
gov.1 <- prop.table(gov.1)
gov.1 <- as.data.frame(gov.1)
gov.1$gov.1 <- paste0(scales::percent(gov.1$gov.1, suffix = "%")) %>%
rename(gov.1 = "Proportion")
gov.1$gov.1 <- paste0(scales::percent(gov.1$gov.1, suffix = "%")) %>%
rename("Proportion" = gov.1)
gov.1
gov.1$gov.1 <- paste0(scales::percent(gov.1$gov.1, suffix = "%")) %>%
rename("Proportion" = 'gov.1')
gov.1$Proportion <- gov.1$gov.1
gov.1
gov.1 <- [,-1]
gov.1 <- gov.1[,-1]
gov.1
gov.1 <- summary(gov$Govt_Outcome)
gov.1 <- prop.table(gov.1)
gov.1 <- as.data.frame(gov.1)
gov.1$gov.1 <- paste0(scales::percent(gov.1$gov.1, suffix = "%"))
gov.1$Proportion <- gov.1$gov.1
gov1
gov.1
gov.1 %>%
select(Proportion)
gov.1 <- summary(gov$Govt_Outcome)
gov.1 <- prop.table(gov.1)
gov.1 <- as.data.frame(gov.1)
gov.1$gov.1 <- paste0(scales::percent(gov.1$gov.1, suffix = "%"))
gov.1$Proportion <- gov.1$gov.1
gov.1 %>%
select(Proportion)
kable()%>%
kable_styling(bootstrap_options = "bordered",
full_width = FALSE)
gov.1 <- summary(gov$Govt_Outcome)
gov.1 <- prop.table(gov.1)
gov.1 <- as.data.frame(gov.1)
gov.1$gov.1 <- paste0(scales::percent(gov.1$gov.1, suffix = "%"))
gov.1$Proportion <- gov.1$gov.1
gov.1 %>%
select(Proportion)%>%
kable()
kable_styling(bootstrap_options = "bordered",
full_width = FALSE)
gov.1 <- summary(gov$Govt_Outcome)
gov.1 <- prop.table(gov.1)
gov.1 <- as.data.frame(gov.1)
gov.1$gov.1 <- paste0(scales::percent(gov.1$gov.1, suffix = "%"))
gov.1$Proportion <- gov.1$gov.1
gov.1 <- gov.1 %>%
select(Proportion)
kable(gov.1)
kable_styling(bootstrap_options = "bordered",
full_width = FALSE)
gov.1 <- summary(gov$Govt_Outcome)
gov.1 <- prop.table(gov.1)
gov.1 <- as.data.frame(gov.1)
gov.1$gov.1 <- paste0(scales::percent(gov.1$gov.1, suffix = "%"))
gov.1$Proportion <- gov.1$gov.1
gov.1 <- gov.1 %>%
select(Proportion)
kable(gov.1) %>%
kable_styling(bootstrap_options = "bordered",
full_width = FALSE)
ggplot(sg_df)+
geom_point(aes(AWARD, Total_Project_Cost), color = "#e41b4a")+
theme(text = element_text(family = "Poppins", size = 12, color = "#525252"),
plot.title=element_text(size=14,family = "Poppins", face="bold", hjust = 0.5, color = "#525252"),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.caption=element_text(size=9, hjust=0, margin=margin(15,0,0,0)),
legend.position = "left")  +
scale_color_manual(values = se_colour, name = "Focus")+
labs( x= "Amount Awarded", y = "Total Project Cost", title = "Funding Amount by n/Total Project Cost")+
scale_y_continuous(labels = scales::dollar_format(prefix = "Â£")) +
scale_x_continuous(labels = scales::dollar_format(prefix = "Â£"))
ggplot(sg_df)+
geom_point(aes(AWARD, Total_Project_Cost), color = "#e41b4a")+
theme(text = element_text(family = "Poppins", size = 12, color = "#525252"),
plot.title=element_text(size=14,family = "Poppins", face="bold", hjust = 0.5, color = "#525252"),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.caption=element_text(size=9, hjust=0, margin=margin(15,0,0,0)),
legend.position = "left")  +
scale_color_manual(values = se_colour, name = "Focus")+
labs( x= "Amount Awarded", y = "Total Project Cost", title = "Funding Amount by n\Total Project Cost")+
ggplot(sg_df)+
geom_point(aes(AWARD, Total_Project_Cost), color = "#e41b4a")+
theme(text = element_text(family = "Poppins", size = 12, color = "#525252"),
plot.title=element_text(size=14,family = "Poppins", face="bold", hjust = 0.5, color = "#525252"),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.caption=element_text(size=9, hjust=0, margin=margin(15,0,0,0)),
legend.position = "left")  +
scale_color_manual(values = se_colour, name = "Focus")+
labs( x= "Amount Awarded", y = "Total Project Cost", title = "Funding Amount by /nTotal Project Cost")+
scale_y_continuous(labels = scales::dollar_format(prefix = "Â£")) +
scale_x_continuous(labels = scales::dollar_format(prefix = "Â£"))
ggplot(sg_df)+
geom_point(aes(AWARD, Total_Project_Cost), color = "#e41b4a")+
theme(text = element_text(family = "Poppins", size = 12, color = "#525252"),
plot.title=element_text(size=14,family = "Poppins", face="bold", hjust = 0.5, color = "#525252"),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.caption=element_text(size=9, hjust=0, margin=margin(15,0,0,0)),
legend.position = "left")  +
scale_color_manual(values = se_colour, name = "Focus")+
labs( x= "Amount Awarded", y = "Total Project Cost", title = "Funding Amount by \nTotal Project Cost")+
scale_y_continuous(labels = scales::dollar_format(prefix = "Â£")) +
scale_x_continuous(labels = scales::dollar_format(prefix = "Â£"))
## as dataframe
sg_sport <- as.data.frame(sg_sport)
sg_sport <- sg_sport[order(sg_sport$AWARD),]
sg_sport %>%
top_n(count_of_sp)%>%
ggplot(aes(x= reorder(Sport, AWARD), y =AWARD))+
geom_bar(stat = "identity", fill = "#5D4086") +
coord_flip()+
theme(text = element_text(family = "Poppins", size = 12, color = "#525252"),
plot.title=element_text(size=14,family = "Poppins", face="bold", hjust = 0.5, color = "#525252"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(hjust = 1, size = 8),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.caption=element_text(size=9, hjust=0, margin=margin(15,0,0,0)),
legend.position = "left") +
labs( x= "Organisation type", y = "Number of Awards", title = "Type of Sport \nby Award Amount") +
scale_y_continuous(labels = scales::dollar_format(prefix = "Â£"))
## as dataframe
sg_sport <- as.data.frame(sg_sport)
sg_sport <- sg_sport[order(sg_sport$AWARD),]
sg_sport %>%
top_n(count_of_sp)%>%
ggplot(aes(x= reorder(Sport, AWARD), y =AWARD))+
geom_bar(stat = "identity", fill = "#e41b4a") +
coord_flip()+
theme(text = element_text(family = "Poppins", size = 12, color = "#525252"),
plot.title=element_text(size=14,family = "Poppins", face="bold", hjust = 0.5, color = "#525252"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(hjust = 1, size = 8),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.caption=element_text(size=9, hjust=0, margin=margin(15,0,0,0)),
legend.position = "left") +
labs( x= "Organisation type", y = "Number of Awards", title = "Type of Sport \nby Award Amount") +
scale_y_continuous(labels = scales::dollar_format(prefix = "Â£"))
ggplot(data = sg_org, aes(x= reorder(Org_Class, AWARD), y = AWARD))+
geom_bar(stat = "identity", fill = "#e41b4a") +
coord_flip()+
theme(text = element_text(family = "Poppins", size = 12, color = "#525252"),
plot.title=element_text(size=14,family = "Poppins", face="bold", hjust = 0.5, color = "#525252"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(hjust = 1, size = 8),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.caption=element_text(size=9, hjust=0, margin=margin(15,0,0,0)),
legend.position = "left") +
labs( x= "Organisation type", y = "Award amount", title = "Organisation Type \nby Award Amount", caption = "Only one type has been selected per award. \nThis may not have been consistently applied by applicants")+
scale_y_continuous(labels = scales::dollar_format(prefix = "Â£"))
sg_df%>%
mutate(ALS_Inactive = case_when(ALS_Inactive_PC_2018 >= 0.9 ~ "6. Between 90% and 100%",
ALS_Inactive_PC_2018 >= 0.8 ~ "5. Between 80% and 89%",
ALS_Inactive_PC_2018 >= 0.7 ~ "4. Between 70% and 79%",
ALS_Inactive_PC_2018 >= 0.5 ~ "3. Between 50% and 69%",
ALS_Inactive_PC_2018 >= 0.3 ~ "2. Between 30% and 49%",
TRUE ~ '1. Under 30%'))%>%
ggplot()+
geom_bar(aes(x= ALS_Inactive, y = AWARD), fill = "#e41b4a", stat = "identity" )+
theme(text = element_text(family = "Poppins", size = 12, color = "#5F5F5F"),
plot.title=element_text(size=14,family = "Poppins", face="bold", hjust = 0.5, color = "#525252"),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank(),
panel.background = element_blank(),
plot.caption=element_text(size=9, hjust=0, margin=margin(15,0,0,0)),
legend.position = "left")  +
labs( x= "Percentage of Inactive (grouped)", y = "Amount awarded", title = "Active Lives Inactive",
caption = ("Active Lives Survey 2018-2019")) +
scale_y_continuous(labels = scales::dollar_format(prefix = "Â£"))
setwd("C:/Users/jenniferb/OneDrive - Sport England/GitHub/Site_SE")
